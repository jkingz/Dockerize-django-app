name: django-docker-container

services:
  app:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    image: my-docker-image
    container_name: my-app-container
    command: /app/entrypoint.sh
    ports:
      - "8000:8000"
    environment:
      - SERVICE_NAME=app
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
      - DJANGO_SUPERUSER_FIRST_NAME=Admin
      - DJANGO_SUPERUSER_LAST_NAME=User
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  postgres:
    image: postgres
    container_name: my-docker-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: test
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    container_name: my-docker-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 8001
    restart: unless-stopped
    ports:
      - "8001:8001"
  redis:
    image: redis:alpine
    container_name: my-docker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  celery:
    image: my-docker-image
    container_name: my-docker-celery
    command: celery -A core worker -E -l info
    environment:
      - SERVICE_NAME=celery
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - app

  beat:
    image: my-docker-image
    container_name: my-docker-beat
    command: celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - SERVICE_NAME=celery-beat
    volumes:
      - .:/app
    depends_on:
      - redis
      - app

  flower:
    image: my-docker-image
    container_name: my-docker-flower
    command: celery -A core flower --basic_auth=admin:admin
    ports:
      - "5555:5555"
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
